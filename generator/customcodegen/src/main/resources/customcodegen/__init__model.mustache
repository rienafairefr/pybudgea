# coding: utf-8

# flake8: noqa
{{>partial_header}}

from __future__ import absolute_import
from marshmallow import fields


def field_type_to_field(value):
    if value == 'int':
        return fields.Integer
    elif value == 'str':
        return fields.String
    elif value == 'float':
        return fields.Str
    elif value == 'object':
        return fields.Mapping
    elif value == 'date':
        return fields.Date
    elif value == 'bool':
        return fields.Boolean
    elif value == 'datetime':
        return fields.DateTime
    elif value.startswith('list['):
        inner = value[5:-1]
        return lambda *a, **kw: fields.List(field_type_to_field(inner))
    else:
        from budgea import models as budgea_models
        try:
            return fields.Nested(getattr(budgea_models, '%sSchema' % value))
        except Exception as e:
            raise Exception('unknown type for marshmallow schema field: %s' % value)


# import models into model package
{{#models}}{{#model}}from {{modelPackage}}.{{classFilename}} import {{classname}}, {{classname}}Schema{{/model}}
{{/models}}
